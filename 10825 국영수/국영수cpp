#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>
using namespace std;

bool compare(tuple<string, int, int, int> a, tuple<string, int, int, int> b)
{
	if (get<1>(a) == get<1>(b) && get<2>(a) == get<2>(b) && get<3>(a) == get<3>(b))
		return get<0>(a) < get<0>(b);
	else if (get<1>(a) == get<1>(b) && get<2>(a) == get<2>(b))
		return get<3>(a) > get<3>(b);
	else if (get<1>(a) == get<1>(b))
		return get<2>(a) < get<2>(b);
	else if (get<1>(a) > get<1>(b))
		return get<1>(b) < get<1>(a);
	else
		return 0;
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N, kor, eng, mat;
	cin >> N;
	vector<tuple<string, int, int, int>> v;
	string name;

	for (int i = 0; i < N; i++)
	{
		cin >> name;
		cin.ignore();
		cin>>kor >> eng >> mat;

		v.push_back(make_tuple(name, kor, eng, mat));
	}

	sort(v.begin(), v.end(), compare);
	
	for (int i = 0; i < N; i++)
		cout << get<0>(v[i]) << "\n";

	return 0;
}
